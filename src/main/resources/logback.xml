<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>
<configuration scan="true" scanPeriod="30 minutes" debug="false">
    <!--logback.xml加载早于application.yml，如果直接通过${参数key}的形式获取是无法获取到对应参数值的,
    source指定的是application.yml配置文件中key,其它地方直接用${app.name}引用这个值,
    SpringBoot默认logback.xml和logback-spring.xml名称为配置文件,此时会读不到配置文件，
    可以将logback.xml更名为logback-custom.xml，并在application.yml中指定logging.config=classpath:logback-custom.xml
    这样就可以完美的读取到配置文件了-->
    <!--<springProperty scope="context" name="app.name" source="spring.application.name"/>-->
    <!--<contextName>${app.name}</contextName>-->

    <!-- 日志存储根路径 -->
    <property name="log.dir.root" value="logs"/>
    <contextName>"springboot-demo"</contextName>

    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss} | %highlight(%-5level) | %yellow(%thread) | %green(%logger) | %msg%n"/>/>

    <!-- 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 可以指定字符集，对于中文输出有意义 -->
        <encoder charset="utf-8">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    <!-- info 日志 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <!-- 如果命中就禁止这条日志 -->
            <onMatch>DENY</onMatch>
            <!-- 如果没有命中就使用这条规则 -->
            <onMismatch>ACCEPT</onMismatch>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log.dir.root}/info/sys-info-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 -->
            <maxHistory>2</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- error 日志 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log.dir.root}/error/sys-error-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 180天 -->
            <maxHistory>2</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <!--配置一些第三方包的日志过滤级别 如果level设置为OFF则关掉相关路径下的日志-->
    <logger name="org.springframework" level="OFF"/>
    <logger name="org.mybatis" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ERROR"/>
        <appender-ref ref="INFO"/>
    </root>
</configuration>
