#如果要使用log4j作为slf4j的实现，必须先排除spring-logging中的logback实现,并且配置log4j.properties

### 设置日志级别 ###
#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL
#其语法为：log4j.rootLogger =[level],appenderName1,appenderName2,...
log4j.rootLogger = info,std,exp,logdb

### 指定特定包的输出特定的级别 ###
log4j.logger.org.springframework = OFF

### 设置控制台日志appender(输出形式)及layout(输出布局)参数 ###
log4j.appender.std = org.apache.log4j.ConsoleAppender
log4j.appender.std.Target = System.out
log4j.appender.std.layout = org.apache.log4j.PatternLayout
log4j.appender.std.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,SSS} | %-5p | @%l%nMessage:%m%n

### 设置文件日志appender(输出形式)及layout(输出布局)参数 ###
log4j.appender.exp = org.apache.log4j.DailyRollingFileAppender
log4j.appender.exp.layout = org.apache.log4j.PatternLayout
log4j.appender.exp.Threshold= ERROR
log4j.appender.exp.ImmediateFlush= TRUE
log4j.appender.exp.Append = true
### log4j会先生成sys-error-这样一个没有后缀的文件，然后当这一天过去的时候，生成一个新的sys-error-，然后把原来的保存为加上日期格式后缀的文件 ###
log4j.appender.exp.File= ./log/log4j/springboot-demo/sys-error-
log4j.appender.exp.DatePattern= yyyy-MM-dd'.log'
log4j.appender.exp.Encoding= UTF-8
log4j.appender.exp.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,SSS} | %-5p | @%l%nMessage:%m%n


### 将日志记录到MySQL数据库 ###
#log4j.appender.logdb= org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.logdb.layout= org.apache.log4j.PatternLayout
#log4j.appender.logdb.Driver= com.mysql.jdbc.Driver
#log4j.appender.logdb.URL= jdbc:mysql://127.0.0.1:3306/test?Unicode=true&characterEncoding=utf8&serverTimezone=PRC
#log4j.appender.logdb.User= root
#log4j.appender.logdb.Password= 123456
#log4j.appender.logdb.Sql= INSERT INTO log4j(project_name,create_date,level,category,file_name,thread_name,line,all_category,message)values('springboot-demo','%d{yyyy-MM-dd HH:mm:ss}','%p','%c','%F','%t','%L','%l','%m')